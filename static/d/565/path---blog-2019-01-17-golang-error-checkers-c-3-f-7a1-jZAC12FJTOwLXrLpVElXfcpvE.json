{"data":{"markdownRemark":{"html":"<p>Recently I saw a line of code:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Lstat</span><span class=\"token punctuation\">(</span>workspaceDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">IsNotExist</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>At first glance, it seems someone made a simple logic\nmistake that makes the code less readable. So I made a pull request\nsuggesting this:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Lstat</span><span class=\"token punctuation\">(</span>workspaceDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">IsExist</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Looks like an easy enough change right? I didn't test it but when\nthe CI job failed, I was shocked.</p>\n<h2>Error checkers</h2>\n<p>You may notice that the parameter passed into <code class=\"language-text\">os.IsExist</code> or <code class=\"language-text\">os.IsNotExist</code>\nis <code class=\"language-text\">err</code>. Normally, you might expect to pass the filepath instead.</p>\n<p>Well, golang uses these as error checkers.</p>\n<p>So with <code class=\"language-text\">os.IsExist</code>, it's actually checking for <em>an error that would appear\nif the file exists</em></p>","fields":{"slug":"/blog/2019-01-17GolangErrorCheckers/"},"frontmatter":{"date":"January 17, 2019","title":"Golang Error Checkers: os.IsExist vs os.IsNotExist"}}},"pageContext":{}}